{"version":3,"sources":["components/ChannelList/ChannelListSettings.js","components/ChannelList/Channel.js","components/ChannelList/ChannelListChannels.js","components/ChannelList/index.js","utils/apiUrlGenerator.js","utils/Api.js","components/File/index.js","components/Favorites/index.js","components/Package/PackageNavigation.js","components/Downloader/index.js","components/Package/PackageHeader.js","components/Error.js","components/Package/index.js","Theme.js","components/Home/index.js","components/Stats/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","button","marginRight","ChannelListSettings","props","optionsButton","classes","useState","sortPopperIsVisible","setSortPopperIsVisible","selectionPopperIsVisible","setSelectionPopperIsVisible","channelActionIsInProgress","setChannelActionIsInProgress","sortAnchorRef","React","useRef","selectionAnchorRef","selectedChannels","length","channelActions","Button","variant","color","onClick","ref","className","CircularProgress","size","Popper","open","anchorEl","current","Paper","ClickAwayListener","onClickAway","MenuList","map","item","key","MenuItem","event","onOptionButtonSuccess","label","Toolbar","optionButtons","Typography","noWrap","headline","TextField","value","filterText","onChange","e","onFilterTextChange","target","Tooltip","IconButton","aria-label","undefined","field","dir","type","sortOption","index","onSortChange","handleSortChange","options","root","boxSizing","marginBottom","width","borderRadius","overflow","background","selected","display","justifyContent","padding","border","backgroundColor","outline","fontSize","textAlign","fontWeight","textOverflow","Channel","memo","isEditMode","setIsEditMode","channelNo","setChannelNo","channelName","setChannelName","focusInput","select","notifyCursorPos","dataset","enterEditMode","blurInput","disableEditMode","channelData","name","cursorPos","channelId","onCursorChange","nextChannelToEnter","nextFieldToEnter","newData","onChannelChange","includes","onKeyNavigation","style","onKeyDown","keys","38","40","13","shiftKey","keyCode","preventDefault","id","Checkbox","onSelectionChange","checked","data-field","tabIndex","channelTabIndex","readOnly","onFocus","autoFocus","onBlur","channelNameReadOnly","ChannelListChannels","setCursorPos","handleKeyNavigation","currentIndex","newIndex","i","console","log","channels","parseInt","handleChannelChange","channel","handleCursorChange","handleSelectionChange","Row","indexOf","height","itemCount","itemSize","overscanCount","itemData","text","filter","setFilter","sort","setSort","setSelectedChannels","newSelectedChannels","push","splice","channelsToDisplay","filteredChannels","toLowerCase","filterChannels","retA","retB","a","b","sortChannels","getChannelsToDisplay","sortField","sortDir","sortType","baseUrl","process","ApiUrlGenerator","buildFileUrl","scmPackageHash","scmFileId","buildFileExportUrl","buildPackageUrl","buildReorderUrl","buildFavoriteUrl","favNo","buildChannelsUrl","buildDownloadUrl","buildUploadUrl","buildUploadJsonUrl","buildImportSettingsUrl","buildStatsUrl","Api","getPackage","scmPackageId","cbSuccess","cbError","fetch","apiUrlGenerator","then","results","json","data","catch","error","getFavorites","callback","getFile","ok","Error","statusText","saveFile","method","body","JSON","stringify","response","saveFavorites","addChannelsToFav","channelIds","action","removeChannelsFromFav","getStats","File","snackbar","useSnackbar","isInitialized","setIsInitialized","setChannels","filename","setFilename","modifiedChannels","setModifiedChannels","isSaving","setIsSaving","useEffect","match","params","modifiedChannelsAction","Object","showMessage","scmPackage","favorites","forEach","element","clearAfterSaving","ChannelList","newChannels","Snackbar","Alert","elevation","severity","Favorites","initData","palette","primary","light","container","list","minWidth","PackageNavigation","List","files","file","hash","link","forwardRef","to","ListItem","component","ListItemIcon","ListItemText","secondary","channelCount","Divider","favorite","Download","Container","href","startIcon","filenameHeadline","PackageHeader","AppBar","position","edge","onToggleDrawer","icon","Grid","spacing","direction","alignItems","justify","minHeight","xs","Link","onReset","flexDirection","mainContainer","main","Package","setScmPackage","scmPackageNavigation","setScmPackageNavigation","navOpen","setNavOpen","isError","setError","handleDrawerToggle","loadData","updateNavigation","Helmet","path","Downloader","createMuiTheme","Home","ThemeProvider","Theme","CssBaseline","Stats","stats","setStats","series","require","config","App","SnackbarProps","autoHideDuration","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kcAkBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,GAEZC,OAAQ,CACNC,YAAa,YAiHFC,EA7Ga,SAACC,GAE3B,IAyBIC,EAzBEC,EAAUV,IAEhB,EAAsDW,oBAAS,GAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAAgEF,oBAAS,GAAzE,mBAAOG,EAAP,KAAiCC,EAAjC,KACA,EAAkEJ,oBAAS,GAA3E,mBAAOK,EAAP,KAAkCC,EAAlC,KAEMC,EAAgBC,IAAMC,OAAO,MAC7BC,EAAqBF,IAAMC,OAAO,MAwDxC,OArCIZ,EAAMc,iBAAiBC,OAAS,GAAKf,EAAMgB,eAAeD,OAAS,IACrEd,EACE,iCACE,eAACgB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,kBAAMb,GAA4B,IAC3Cc,IAAKR,EACLS,UAAWpB,EAAQL,OALrB,UAOGG,EAAMc,iBAAiBC,OAP1B,kBAQGP,GAA6B,cAACe,EAAA,EAAD,CAAkBC,KAAM,KACtD,cAAC,IAAD,OAEF,cAACC,EAAA,EAAD,CAAQC,KAAMpB,EAA0BqB,SAAUd,EAAmBe,QAArE,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBC,YAAa,kBAAMxB,GAA4B,IAAlE,SACE,cAACyB,EAAA,EAAD,UACGhC,EAAMgB,eAAeiB,KAAI,SAACC,EAAMC,GAAP,OACxB,cAACC,EAAA,EAAD,CAAoBhB,QAAS,SAACiB,GAC5BH,EAAKd,QAAQpB,EAAMc,kBAAkB,WACnCL,GAA6B,GAC7BT,EAAMsC,2BAER7B,GAA6B,GAC7BF,GAA4B,IAN9B,SAQG2B,EAAKK,OAROJ,kBAmB7B,eAACK,EAAA,EAAD,CAASlB,UAAU,wBAAnB,UACE,gCACGrB,EACAD,EAAMyC,iBAEP,cAACC,EAAA,EAAD,CAAYxB,QAAQ,KAAKyB,QAAM,EAACrB,UAAWpB,EAAQP,MAAnD,SACGK,EAAM4C,WAEX,gCACE,cAACC,EAAA,EAAD,CACEN,MAAM,YACNO,MAAO9C,EAAM+C,WACbC,SA5DuB,SAACC,GAC9BjD,EAAMkD,mBAAmBD,EAAEE,OAAOL,UA6D9B,cAACM,EAAA,EAAD,CAASzD,MAAM,gBAAf,SACE,cAAC0D,EAAA,EAAD,CAAYC,aAAW,SAAvB,SACE,cAAC,IAAD,QAGJ,cAACF,EAAA,EAAD,CAASzD,MAAM,cAAc+B,MAAMtB,QAA8BmD,EAAjE,SACE,cAACF,EAAA,EAAD,CAAYhC,IAAKX,EAAe4C,aAAW,cAAclC,QAAS,kBAAMf,GAAuB,IAA/F,SACE,cAAC,IAAD,QAGJ,cAACoB,EAAA,EAAD,CAAQC,KAAMtB,EAAqBuB,SAAUjB,EAAckB,QAA3D,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBC,YAAa,kBAAM1B,GAAuB,IAA7D,SACE,cAAC2B,EAAA,EAAD,UAlFQ,CAClB,CAACO,MAAO,iBAAkBiB,MAAO,aAAcC,IAAK,MAAOC,KAAM,UACjE,CAACnB,MAAO,kBAAmBiB,MAAO,aAAcC,IAAK,OAAQC,KAAM,UACnE,CAACnB,MAAO,WAAYiB,MAAO,OAAQC,IAAK,MAAOC,KAAM,QACrD,CAACnB,MAAO,YAAaiB,MAAO,OAAQC,IAAK,OAAQC,KAAM,SA+E9BzB,KAAI,SAAC0B,EAAYC,GAAb,OACf,cAACxB,EAAA,EAAD,CAAiChB,QAAS,SAACiB,GAAD,OAzEjC,SAACsB,GACxB3D,EAAM6D,aAAaF,EAAWH,MAAOG,EAAWF,IAAKE,EAAWD,MAChErD,GAAuB,GAuE4CyD,CAAiBH,IAAtE,SACGA,EAAWpB,OADCoB,EAAWpB,kBAQnCvC,EAAM+D,e,0BC7HTvE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCsE,KAAM,SAAChE,GAAD,MAAY,CAChBiE,UAAW,aACXC,aAAc,MACdpE,YAAa,MACbqE,MAAO,OACPC,aAAc,MACdC,SAAU,SACVC,WAAYtE,EAAMuE,SAAW,UAAY,UACzCC,QAAS,OACTC,eAAgB,gBAChBC,QAAS,MACT,iCAAkC,CAChCC,OAAQ,IACRC,gBAAiB,cACjBT,MAAO,QAET,sDAAuD,CACrDU,QAAS,OACTP,WAAY,aAEd,mCAAoC,CAClCE,QAAS,eACTE,QAAS,MACT5E,YAAa,OACbqB,MAAO,QAET,qBAAsB,CACpBgD,MAAO,OACPW,SAAU,OACVC,UAAW,QACXjF,YAAa,OAEf,eAAgB,CACdF,SAAU,EACVoF,WAAY,SACZC,aAAc,WACdd,MAAO,QACPE,SAAU,SACVS,SAAU,OACVJ,QAAS,OAEX,0BAA2B,CACzBJ,WAAY,iBA2LHY,EAtLCvE,IAAMwE,MAAK,SAACnF,GAuB1B,MAAoCG,oBAAS,GAA7C,mBAAOiF,EAAP,KAAmBC,EAAnB,KACA,EAAkClF,mBAAS,IAA3C,mBAAOmF,EAAP,KAAkBC,EAAlB,KACA,EAAsCpF,mBAAS,IAA/C,mBAAOqF,EAAP,KAAoBC,EAApB,KACMvF,EAAUV,EAAUQ,GASpB0F,EAAa,SAACrD,GAClBA,EAAMc,OAAOwC,SACbC,EAAgBvD,EAAMc,OAAO0C,QAAQrC,OACrCsC,EAAczD,IAQV0D,EAAY,SAAC1D,GACjB2D,EAAgB,EAAG,OAOfF,EAAgB,SAACzD,GACjB+C,IAIJC,GAAc,GACdI,EAAezF,EAAMiG,YAAYC,MACjCX,EAAavF,EAAMiG,YAAYX,aAO3BM,EAAkB,SAACpC,GAGnBxD,EAAMmG,UAAUC,YAAcpG,EAAMiG,YAAYG,WAAapG,EAAMmG,UAAU3C,QAAUA,GAK3FxD,EAAMqG,eAAerG,EAAMiG,YAAYG,UAAW5C,IAwC9CwC,EAAkB,SAACM,EAAoBC,GAI3C,GAHAlB,GAAc,GAGVrF,EAAMiG,YAAYC,OAASV,GAAexF,EAAMiG,YAAYX,YAAcA,EAAW,CACvF,IAAIkB,EAAU,GACdA,EAAO,KAAWhB,EAClBgB,EAAO,UAAgBlB,EACvBtF,EAAMyG,gBAAN,2BAA0BzG,EAAMiG,aAAgBO,IAI9C,CAAC,KAAM,OAAQ,WAAWE,SAASJ,GACrCtG,EAAM2G,gBAAgBL,EAAoBC,GAE1CvG,EAAMqG,eAAe,EAAG,OAU5B,OACE,qBAAKO,MAAO5G,EAAM4G,MAAlB,SACE,sBACEtF,UAAWpB,EAAQ8D,KACnB6C,UA9De,SAACxE,GACpB,IAAIyE,EAAO,CACTC,GAAI,KACJC,GAAI,OACJC,GAAI,QAIF5E,EAAM6E,UAA8B,IAAlB7E,EAAM8E,SAAgD,OAA/B9E,EAAMc,OAAO0C,QAAQrC,OAChEwC,EAAgB,KAAM,QACtB3D,EAAM+E,kBACG/E,EAAM6E,UAA8B,IAAlB7E,EAAM8E,SAAgD,SAA/B9E,EAAMc,OAAO0C,QAAQrC,OACvEwC,EAAgB,UAAW,MAC3B3D,EAAM+E,kBACqB,IAAlB/E,EAAM8E,SAAgD,SAA/B9E,EAAMc,OAAO0C,QAAQrC,OACrDwC,EAAgB,OAAQ,MACxB3D,EAAM+E,kBACqB,IAAlB/E,EAAM8E,SAAgD,OAA/B9E,EAAMc,OAAO0C,QAAQrC,QACrDwC,EAAgB,UAAW,QAC3B3D,EAAM+E,kBAGJ/E,EAAM8E,WAAWL,IACnBd,EAAgBc,EAAKzE,EAAM8E,SAAU9E,EAAMc,OAAO0C,QAAQrC,OAC1DnB,EAAM+E,mBAuCJC,GAAI,WAAarH,EAAMiG,YAAYG,UAHrC,UAKE,cAACkB,EAAA,EAAD,CACEtE,SAduB,SAACX,GACS,oBAA5BrC,EAAMuH,mBACfvH,EAAMuH,kBAAkBvH,EAAMiG,YAAYG,YAatCoB,QAASxH,EAAMuE,SACfpD,MAAM,cAER,uBACEuC,KAAK,OACLpC,UAAU,aACVmG,aAAW,KACXC,SAAkC,IAAxB1H,EAAM2H,gBAA0B,EAC1C7E,MAAOsC,EAAaE,EAAYtF,EAAMiG,YAAYX,UAClDsC,UAAUxC,EACVpC,SAAU,SAACC,GAAOsC,EAAatC,EAAEE,OAAOL,QACxC+E,QAASnC,EACToC,UAAW9H,EAAMmG,UAAUC,YAAcpG,EAAMiG,YAAYG,WAAuC,OAA1BpG,EAAMmG,UAAU3C,MACxFuE,OAAQhC,IAEV,uBACErC,KAAK,OACLpC,UAAU,OACVmG,aAAW,OACXC,SAAkC,IAAxB1H,EAAM2H,gBAA0B,EAC1C7E,MAAOsC,EAAaI,EAAcxF,EAAMiG,YAAYC,KACpDlD,SAAU,SAACC,GAAOwC,EAAexC,EAAEE,OAAOL,QAC1C+E,QAASnC,EACToC,UAAW9H,EAAMmG,UAAUC,YAAcpG,EAAMiG,YAAYG,WAAuC,SAA1BpG,EAAMmG,UAAU3C,MACxFuE,OAAQhC,EACR6B,SAAU5H,EAAMgI,8BC/HXC,EAhGa,SAACjI,GAE3B,MAAkCG,mBAAS,CAACiG,UAAW,EAAG5C,MAAO,OAAjE,mBAAO2C,EAAP,KAAkB+B,EAAlB,KAEMC,EAAsB,SAAC1E,EAAKD,GAEhC,IAAI4E,EAAcC,EAClB,IAAK,IAAIC,KAFTC,QAAQC,IAAI,uBAEExI,EAAMyI,SAClB,GAAItC,EAAUC,YAAcpG,EAAMyI,SAASH,GAAGlC,UAA9C,CAIA,OADAgC,EAAeM,SAASJ,GAChB7E,GACN,IAAK,OACH4E,EAAWD,EAAe,EAC1B,MACF,IAAK,QAGL,IAAK,OACHC,EAAWD,EAAe,EAC1B,MACF,IAAK,KACHC,EAAWD,EAAe,EAC1B,MACF,IAAK,UACHC,EAAWD,EAKyB,qBAA7BpI,EAAMyI,SAASJ,IACxBH,EAAa,CAAC9B,UAAWpG,EAAMyI,SAASJ,GAAUjC,UAAW5C,MAAOA,MAKpEmF,EAAsB,SAACC,GACU,oBAA1B5I,EAAMyG,iBACfzG,EAAMyG,gBAAgBmC,IAIpBC,EAAqB,SAACzC,EAAW5C,GACrC0E,EAAa,CAAC9B,UAAWA,EAAW5C,MAAOA,KAGvCsF,EAAwB,SAAC1C,GAC7BpG,EAAMuH,kBAAkBnB,IAGtBuB,EAAkB,EAEhBoB,EAAM,SAAC,GAAsB,IAApBnF,EAAmB,EAAnBA,MAAOgD,EAAY,EAAZA,MAChBgC,EAAU5I,EAAMyI,SAAS7E,GACzBW,GAAkE,IAAvDvE,EAAMc,iBAAiBkI,QAAQJ,EAAQxC,WAGtD,OAFAuB,GAAoC,EAGlC,cAAC,EAAD,CACE1B,YAAa2C,EAEbjB,gBAAiBA,EACjBlB,gBAAiBkC,EACjBhC,gBAAiBwB,EACjB9B,eAAgBwC,EAChB1C,UAAWA,EACXS,MAAOA,EACPW,kBAAmBuB,EACnBvE,SAAUA,EACVyD,oBAAqBhI,EAAMgI,qBATtBY,EAAQxC,YAcnB,OACE,qBAAKiB,GAAG,yBAAR,SACE,cAAC,IAAD,UACG,gBAAG4B,EAAH,EAAGA,OAAQ9E,EAAX,EAAWA,MAAX,OACC,cAAC,IAAD,CACE8E,OAAQA,EACRC,UAAWlJ,EAAMyI,SAAS1H,OAC1BoI,SAAU,GACVhF,MAAOA,EACP7C,UAAU,WACV8H,cAAe,EACfC,SAAUrJ,EAAMyI,SAPlB,SASGM,UCOE7D,EAhGC,SAAClF,GAEf,IAEA,EAA4BG,mBAAS,CAACmJ,KAAM,KAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBrJ,mBAHJ,CAACqD,MAAO,aAAcC,IAAK,MAAOC,KAAM,WAG5D,mBAAO+F,EAAP,KAAaC,EAAb,KACA,EAAgDvJ,mBAAS,IAAzD,mBAAOW,EAAP,KAAyB6I,EAAzB,KA6CMb,EAAwB,SAAC1C,GAC7B,IAAIwD,EAAmB,YAAO9I,GAC1B8C,EAAQgG,EAAoBZ,QAAQ5C,IACzB,IAAXxC,EACFgG,EAAoBC,KAAKzD,GAEzBwD,EAAoBE,OAAOlG,EAAO,GAEpC+F,EAAoBC,IAOlBG,EA5ByB,SAACtB,GAC5B,IAAIsB,EA/BiB,SAACtB,GACtB,IAAIuB,EAAmB,GACvB,IAAK,IAAI1B,KAAKG,GAC+D,IAAvEA,EAASH,GAAGpC,KAAK+D,cAAcjB,QAAQO,EAAOD,KAAKW,gBACrDD,EAAiBH,KAAKpB,EAASH,IAGnC,OAAO0B,EAwBiBE,CAAelK,EAAMyI,UAG7C,OAFAsB,EAtBmB,SAACtB,GACpB,IAAI0B,EAAoB,SAAbV,EAAKhG,IAAiB,GAAK,EAClC2G,EAAoB,SAAbX,EAAKhG,KAAkB,EAAI,EAEtC,OAAQgG,EAAK/F,MACX,IAAK,SACH+E,EAASgB,MAAK,SAACY,EAAEC,GAAH,OAAS5B,SAAS2B,EAAEZ,EAAKjG,QAAUkF,SAAS4B,EAAEb,EAAKjG,QAAU2G,EAAOC,KAClF,MACF,QACA,IAAK,OACH3B,EAASgB,MAAK,SAACY,EAAEC,GAAH,OAASD,EAAEZ,EAAKjG,OAAS8G,EAAEb,EAAKjG,OAAS4G,EAAOD,KAGlE,OAAO1B,EASa8B,CAAaR,GA0BXS,CAAqBxK,EAAMyI,UAEnD,OACE,sBAAKnH,UAAU,eAAf,UACE,cAAC,EAAD,CACEyB,WAAYwG,EAAOD,KACnBG,KAAM,CAACgB,UAAW,OAAQC,QAAS,OAAQC,SAAU,QACrDF,UAAWhB,EAAKjG,MAChBkH,QAASjB,EAAKhG,IACdkH,SAAUlB,EAAK/F,KACfR,mBAAoB,SAACoG,GAAD,OAAUE,EAAU,CAACF,KAAMA,KAC/CzF,aA3CmB,SAACL,EAAOC,EAAKC,GACpCgG,EAAQ,CAAClG,MAAOA,EAAOC,IAAKA,EAAKC,KAAMA,KA2CnC6D,kBAAmBuB,EACnBhI,iBAAkBA,EAClBE,eAAgBhB,EAAMgB,eACtByB,cAAezC,EAAMyC,cACrBH,sBApB4B,WAChCqH,EAAoB,KAoBhB/G,SAAU5C,EAAM4C,WAElB,cAAC,EAAD,CACE6F,SAAUsB,EACVtD,gBA1CsB,SAACmC,GACU,oBAA1B5I,EAAMyG,iBACfzG,EAAMyG,gBAAgBmC,IAyCpBrB,kBAAmBuB,EACnBhI,iBAAkBA,EAClBkH,oBAAqBhI,EAAMgI,0BC9F/B4C,EAAUC,8BA+CCC,EA9CS,CACpBC,aAAc,SAASC,EAAgBC,GACnC,OAAOL,EAAUI,EAAiB,SAAWC,EAAY,UAG7DC,mBAAoB,SAASF,EAAgBC,GACzC,OAAOL,EAAUI,EAAiB,SAAWC,EAAY,SAG7DE,gBAAiB,SAASH,GACtB,OAAOJ,EAAUI,EAAiB,SAGtCI,gBAAiB,SAASJ,EAAgBC,GACtC,OAAOL,EAAUI,EAAiB,SAAWC,EAAY,aAG7DI,iBAAkB,SAASL,EAAgBM,GACvC,OAAOV,EAAUI,EAAiB,cAAgBM,EAAQ,SAG9DC,iBAAkB,SAASP,GACvB,OAAOJ,EAAUI,EAAiB,kBAGtCQ,iBAAkB,SAASR,GACvB,OAAOJ,EAAUI,EAAiB,cAGtCS,eAAgB,WACZ,OAAOb,EAAU,WAGrBc,mBAAoB,WAChB,OAAOd,EAAU,eAGrBe,uBAAwB,SAASX,GAC7B,OAAOJ,EAAUI,EAAiB,yBAGtCY,cAAe,WACX,OAAOhB,EAAU,eC6DViB,EAtGL,CACRC,WADQ,SACGC,EAAcC,EAAWC,GAClCC,MAAMC,EAAgBhB,gBAAgBY,IACnCK,MAAK,SAAAC,GACJ,OAAOA,EAAQC,UAEhBF,MAAK,SAAAG,GACJP,EAAUO,MACTC,OAAM,SAAAC,GACPR,EAAQQ,OAIdC,aAbQ,SAaKX,EAAcT,EAAOqB,GAChCT,MAAMC,EAAgBd,iBAAiBU,EAAcT,IAClDc,MAAK,SAAAC,GACJ,OAAOA,EAAQC,UAEhBF,MAAK,SAAAG,GACJI,EAASJ,OAIfK,QAvBQ,SAuBA5B,EAAgBC,EAAW0B,GACjCT,MAAMC,EAAgBpB,aAAaC,EAAgBC,IAChDmB,MAAK,SAAAC,GACJ,IAAKA,EAAQQ,GACX,MAAMC,MAAMT,EAAQU,YAEtB,OAAOV,KAERD,MAAK,SAAAC,GACJ,OAAOA,EAAQC,UAEhBF,MAAK,SAAAG,GACJI,EAASJ,MAEVC,OAAM,SAAAC,GACLlE,QAAQC,IAAIiE,OAIlBO,SA1CQ,SA0CChC,EAAgBC,EAAWxC,EAAUkE,GAE5CT,MAAMC,EAAgBpB,aAAaC,EAAgBC,GAAY,CAC7DgC,OAAQ,OACRC,KAAMC,KAAKC,UAAU3E,KAEpB2D,MAAK,SAAAiB,GAAQ,OAAIA,EAASf,UAC1BF,MAAK,WAAOO,QAGjBW,cApDQ,SAoDMtC,EAAgBM,EAAO7C,EAAUkE,GAC7CT,MAAMC,EAAgBd,iBAAiBL,EAAgBM,GAAQ,CAC7D2B,OAAQ,OACRC,KAAMC,KAAKC,UAAU3E,KAEpB2D,MAAK,SAAAiB,GAAQ,OAAIA,EAASf,UAC1BF,MAAK,WAAOO,QAGjBY,iBA7DQ,SA6DSvC,EAAgBM,EAAOkC,EAAYb,GAClD,IAAI1G,EAAc,GAClB,IAAK,IAAIqC,KAAKkF,EACZvH,EAAYuH,EAAWlF,IAAM,CAC3BlC,UAAWoH,EAAWlF,GACtBmF,OAAQ,OAGZvB,MAAMC,EAAgBd,iBAAiBL,EAAgBM,GAAQ,CAC7D2B,OAAQ,OACRC,KAAMC,KAAKC,UAAUnH,KAEpBmG,MAAK,SAAAiB,GAAQ,OAAIA,EAASf,UAC1BF,MAAK,WAAOO,QAGjBe,sBA7EQ,SA6Ec1C,EAAgBM,EAAOkC,EAAYb,GACvD,IAAI1G,EAAc,GAClB,IAAK,IAAIqC,KAAKkF,EACZvH,EAAYuH,EAAWlF,IAAM,CAC3BlC,UAAWoH,EAAWlF,GACtBmF,OAAQ,UAGZvB,MAAMC,EAAgBd,iBAAiBL,EAAgBM,GAAQ,CAC7D2B,OAAQ,OACRC,KAAMC,KAAKC,UAAUnH,KAEpBmG,MAAK,SAAAiB,GAAQ,OAAIA,EAASf,UAC1BF,MAAK,WAAOO,QAGjBgB,SA7FQ,SA6FChB,GACPT,MAAMC,EAAgBP,gBAAiB,CACrCqB,OAAQ,QAEPb,MAAK,SAAAiB,GAAQ,OAAIA,EAASf,UAC1BF,MAAK,SAAAG,GAASI,EAASJ,Q,0CCzFxB/M,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,GAEZC,OAAQ,CACNC,YAAa,YA+FF8N,EA1FF,SAAC5N,GAEZ,IAAME,EAAUV,IACVqO,EAAWC,wBAEjB,EAA0C3N,oBAAS,GAAnD,mBAAO4N,EAAP,KAAsBC,EAAtB,KACA,EAAgC7N,mBAAS,IAAzC,mBAAOsI,EAAP,KAAiBwF,EAAjB,KACA,EAAgC9N,wBAASoD,GAAzC,mBAAO2K,EAAP,KAAiBC,EAAjB,KACA,EAAgDhO,mBAAS,IAAzD,mBAAOiO,EAAP,KAAyBC,EAAzB,KACA,EAAgClO,oBAAS,GAAzC,mBAAOmO,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACR3C,EAAIe,QAAQ5M,EAAMyO,MAAMC,OAAO1D,eAAgBhL,EAAMyO,MAAMC,OAAOzD,WAAW,SAACsB,GAC5E0B,EAAY1B,EAAK9D,UACjB0F,EAAY5B,EAAKhK,OACjByL,GAAiB,QAElB,CAAChO,EAAMyO,MAAMC,OAAO1D,eAAgBhL,EAAMyO,MAAMC,OAAOzD,YAE1D,IAkCI0D,EAEAC,OAAO9H,KAAKsH,GAAkBrN,OAAS,IACzC4N,EAAyB,eAAC1N,EAAA,EAAD,CACvBC,QAAQ,YACRC,MAAM,YACNC,QAlBS,WACXmN,GAAY,GACZ1C,EAAImB,SAAShN,EAAMyO,MAAMC,OAAO1D,eAAgBhL,EAAMyO,MAAMC,OAAOzD,UAAWmD,GAAkB,WAC9FC,EAAoB,IACpBE,GAAY,GACZvO,EAAMgD,WACN6K,EAASgB,YAAT,+BAaAvN,UAAWpB,EAAQL,OAJI,UAMvB,cAAC,IAAD,IANuB,QAOjB+O,OAAO9H,KAAKsH,GAAkBrN,OAPb,WAQtBuN,GAAY,cAAC/M,EAAA,EAAD,CAAkBC,KAAM,SAIzC,IAAIR,EAAiB,GAKrB,OAJAhB,EAAM8O,WAAWC,UAAUC,SAAQ,SAAAC,GACjCjO,EAAe6I,KAAK,CAACtH,MAAO,eAAiB0M,EAAQ3D,MAAOlK,QAAS,SAACqH,EAAUyG,IAxCzD,SAAC1B,EAAYlC,EAAO4D,GAC3CrD,EAAI0B,iBAAiBvN,EAAMyO,MAAMC,OAAO1D,eAAgBM,EAAOkC,GAAY,WACzEa,EAAoB,IACpBa,IACArB,EAASgB,YAAT,UACKrB,EAAWzM,OADhB,kDACgEuK,IAEhEtL,EAAMgD,cAiC8FuK,CAAiB9E,EAAUwG,EAAQ3D,MAAO4D,SAIhJnB,EACI,cAACoB,EAAD,CACE1G,SAAUA,EACVhC,gBA1DoB,SAACmC,GAC3B,IAAIwG,EAAW,YAAO3G,GACtB,IAAK,IAAIH,KAAK8G,EACRA,EAAY9G,GAAGlC,YAAcwC,EAAQxC,YACvCgJ,EAAY9G,GAAKM,GAGrBqF,EAAYmB,GACZf,EAAoB,2BAAID,GAAL,kBAAwBxF,EAAQxC,UAAYwC,MAmDzD5H,eAAgBA,EAChByB,cAAekM,EACf/L,SAAUsL,IAEZ,cAACmB,EAAA,EAAD,CAAU3N,MAAM,EAAhB,SACA,cAAC4N,EAAA,EAAD,CAAOC,UAAW,EAAGrO,QAAQ,SAASsO,SAAS,OAA/C,4BC7FFhQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,GAEZC,OAAQ,CACNC,YAAa,YAkGF2P,EA9FG,SAACzP,GAEjB,IAAM6N,EAAWC,wBACjB,EAA0C3N,oBAAS,GAAnD,mBAAO4N,EAAP,KAAsBC,EAAtB,KACA,EAAgC7N,mBAAS,IAAzC,mBAAOsI,EAAP,KAAiBwF,EAAjB,KACA,EAAgD9N,mBAAS,IAAzD,mBAAOiO,EAAP,KAAyBC,EAAzB,KACA,EAAgClO,oBAAS,GAAzC,mBAAOmO,EAAP,KAAiBC,EAAjB,KACMrO,EAAUV,IAEVkQ,EAAW,WACf7D,EAAIa,aAAa1M,EAAMyO,MAAMC,OAAO1D,eAAgBhL,EAAMyO,MAAMC,OAAOpD,OAAO,SAACiB,GAC7E0B,EAAY1B,EAAKzL,kBACjBkN,GAAiB,OAIrBQ,qBAAU,WACRkB,MAEC,CAAC1P,EAAMyO,MAAMC,OAAO1D,eAAgBhL,EAAMyO,MAAMC,OAAOpD,QAG1D,IAoCIqD,EAEAC,OAAO9H,KAAKsH,GAAkBrN,OAAS,IACzC4N,EAAyB,eAAC1N,EAAA,EAAD,CACvBC,QAAQ,YACRC,MAAM,YACNC,QA1CS,WACX,IAAIgO,EAAW,YAAO3G,GACtB2G,EAAY3F,MAAK,SAACY,EAAEC,GAAH,OAAS5B,SAAS2B,EAAE/E,WAAaoD,SAAS4B,EAAEhF,WAAa,GAAK,KAC/E,IAAIiH,EAAO,GACX6C,EAAYJ,SAAQ,SAAA9M,GAAI,OAAIqK,EAAK1C,KAAK,CAAC,UAAa3H,EAAKkE,UAAW,KAAQlE,EAAKoD,eACjFiD,QAAQC,IAAI+D,GACZgC,GAAY,GACZ1C,EAAIyB,cAActN,EAAMyO,MAAMC,OAAO1D,eAAgBhL,EAAMyO,MAAMC,OAAOpD,MAAOiB,GAAM,WACnF8B,EAAoB,IACpBE,GAAY,GACZvO,EAAMgD,eAiCN1B,UAAWpB,EAAQL,OAJI,UAMvB,cAAC,IAAD,IANuB,QAOjB+O,OAAO9H,KAAKsH,GAAkBrN,OAPb,QAQtBuN,GAAY,cAAC/M,EAAA,EAAD,CAAkBC,KAAM,SAIzC,IAAIR,EAAiB,CACnB,CAACuB,MAAO,kBAAmBnB,QAAS,SAACqH,EAAUyG,IAtCnB,SAAC1B,EAAYlC,EAAO4D,GAChDrD,EAAI6B,sBAAsB1N,EAAMyO,MAAMC,OAAO1D,eAAgBM,EAAOkC,GAAY,WAC9E0B,IACArB,EAASgB,YAAT,UACKrB,EAAWzM,OADhB,sDACoEuK,IAEpEtL,EAAMgD,WACN0M,OA+BmEhC,CAAsBjF,EAAUzI,EAAMyO,MAAMC,OAAOpD,MAAO4D,MAGjI,OACEnB,EACA,cAACoB,EAAD,CACE1G,SAAUA,EACVzH,eAAgBA,EAChBgH,qBAAqB,EACrBvB,gBApCwB,SAACmC,GAC3B,IAAIwG,EAAW,YAAO3G,GACtB,IAAK,IAAIH,KAAK8G,EACRA,EAAY9G,GAAGlC,YAAcwC,EAAQxC,YACvCgJ,EAAY9G,GAAKM,GAGrBqF,EAAYmB,GACZf,EAAoB,2BAAID,GAAL,kBAAwBxF,EAAQxC,UAAYwC,MA6B7DnG,cAAekM,EACf/L,SAAU,cAAgB5C,EAAMyO,MAAMC,OAAOpD,QAC1C,cAAC+D,EAAA,EAAD,CAAU3N,MAAM,EAAhB,SACD,cAAC4N,EAAA,EAAD,CAAOC,UAAW,EAAGrO,QAAQ,SAASsO,SAAS,OAA/C,4B,kGChGFhQ,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCsE,KAAM,SAAAhE,GAAK,MAAK,CACdsE,WAAY5E,EAAMiQ,QAAQC,QAAQC,MAClC1L,MAAOnE,EAAM0B,KAAO,OAAS,SAE/BoO,UAAW,CACTzL,SAAU,UAEZ0L,KAAM,CACJC,SAAU,aAuDCC,GAnDW,SAACjQ,GACzB,IAAME,EAAUV,GAAUQ,GAE1B,IAAKA,EAAM8O,WACT,OAAO,wBAgCT,OACE,qBAAKxN,UAAWpB,EAAQ8D,KAAxB,SACE,sBAAK1C,UAAWpB,EAAQ4P,UAAxB,UACE,cAACI,GAAA,EAAD,CAAM5O,UAAWpB,EAAQ6P,KAAzB,SA/BkC,qBAA3B/P,EAAM8O,WAAWqB,MAA8B,GACnDnQ,EAAM8O,WAAWqB,MAAMlO,KAAI,SAACmO,GACjC,IAAIC,EAAOrQ,EAAM8O,WAAWuB,KACxBC,EAAO3P,IAAM4P,YAAW,SAACvQ,EAAOqB,GAAR,OAAgB,cAAC,IAAD,2BAAUrB,GAAV,IAAiBwQ,GAAI,MAAQH,EAAO,UAAYD,EAAKnF,UAAW5J,IAAKA,QACjH,OACE,eAACoP,GAAA,EAAD,CAAmD5Q,QAAM,EAAC6Q,UAAWJ,EAArE,UACE,cAACK,GAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACC,GAAA,EAAD,CAAchB,QAASQ,EAAK7N,MAAOsO,UAAWT,EAAKU,aAAe,gBAFrD,kBAAoBV,EAAKnF,gBA6BxC,cAAC8F,GAAA,EAAD,IACA,cAACb,GAAA,EAAD,CAAM5O,UAAWpB,EAAQ6P,KAAzB,SArBsC,qBAA/B/P,EAAM8O,WAAWC,UAAkC,GAEvD/O,EAAM8O,WAAWC,UAAU9M,KAAI,SAAC+O,GACrC,IAAIX,EAAOrQ,EAAM8O,WAAWuB,KACxBC,EAAO3P,IAAM4P,YAAW,SAACvQ,EAAOqB,GAAR,OAAgB,cAAC,IAAD,2BAAUrB,GAAV,IAAiBwQ,GAAI,MAAQH,EAAO,cAAgBW,EAAS1F,MAAOjK,IAAKA,QACrH,OACE,eAACoP,GAAA,EAAD,CAAkD5Q,QAAM,EAAC6Q,UAAWJ,EAApE,UACE,cAACK,GAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACC,GAAA,EAAD,CAAchB,QAAS,QAAUoB,EAAS1F,MAAOuF,UAAWG,EAASF,aAAe,gBAFvE,iBAAmBE,EAAS1F,kB,8BCnCpC2F,GAXE,SAACjR,GAEhB,OADAuI,QAAQC,IAAIxI,GAEV,eAACkR,GAAA,EAAD,WACE,0CACA,8LACA,cAACjQ,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYgQ,KAAMhF,EAAgBX,iBAAiBxL,EAAMyO,MAAMC,OAAO1D,gBAAiBoG,UAAW,cAAC,KAAD,IAApI,uC,8BCDA5R,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2R,iBAAkB,CAChBzR,SAAU,OAgCC0R,GA5BO,SAACtR,GACrB,IAAME,EAAUV,KAKhB,IAAKQ,EAAM8O,WACT,OAAO,cAACyC,GAAA,EAAD,IAGT,IAAIlB,EAAOrQ,EAAM8O,WAAWuB,KACxBC,EAAO3P,IAAM4P,YAAW,SAACvQ,EAAOqB,GAAR,OAAgB,cAAC,IAAD,2BAAUrB,GAAV,IAAiBwQ,GAAI,MAAQH,EAAO,YAAahP,IAAKA,QAElG,OACE,cAACkQ,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAAChP,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAYoO,KAAK,QAAQtQ,MAAM,UAAUmC,aAAW,OAAOlC,QAdtC,WACzBpB,EAAM0R,kBAaF,SACE,cAAC,KAAD,MAEF,cAAChP,EAAA,EAAD,CAAYxB,QAAQ,KAAKI,UAAWpB,EAAQmR,iBAA5C,SACGrR,EAAM8O,WAAWZ,WAEpB,cAACjN,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYuP,UAAWJ,EAAMc,UAAW,cAAC,KAAD,IAA1E,4B,kDCjCF5R,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiS,KAAM,CACJ7M,SAAU,YA+BCgI,GA3BD,SAAC9M,GACb,IAAME,EAAUV,KAEhB,OACE,cAACoS,GAAA,EAAD,CACE9B,WAAS,EACT+B,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,QAAQ,SACRpL,MAAO,CAAEqL,UAAW,SANtB,SASE,cAACL,GAAA,EAAD,CAAM1P,MAAI,EAACgQ,GAAI,EAAf,SACE,sBAAKtL,MAAO,CAAC7B,UAAW,UAAxB,UACE,cAAC,KAAD,CAAkBzD,UAAWpB,EAAQyR,OACrC,uCACA,qDACA,cAACQ,GAAA,EAAD,CAAM/Q,QAASpB,EAAMoS,QAASjB,KAAK,IAAnC,2BCjBJ3R,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCsE,KAAM,CACJQ,QAAS,OACT6N,cAAe,SACfpJ,OAAQ,QAEVqJ,cAAe,CACb9N,QAAS,OACT5E,SAAU,EACVyE,SAAU,UAEZkO,KAAM,CACJ3S,SAAU,OAkEC4S,GA9DC,SAACxS,GACf,IAAME,EAAUV,GAAUQ,GAC1B,EAAoCG,wBAASoD,GAA7C,mBAAOuL,EAAP,KAAmB2D,EAAnB,KACA,EAAwDtS,wBAASoD,GAAjE,mBAAOmP,EAAP,KAA6BC,EAA7B,KACA,EAA8BxS,oBAAS,GAAvC,mBAAOyS,EAAP,KAAgBC,EAAhB,KACA,EAA4B1S,mBAAS,MAArC,mBAAO2S,EAAP,KAAgBC,EAAhB,KAEMC,EAAqB,WACzBH,GAAYD,IAGdpE,qBAAU,WACRyE,MAEC,CAACjT,EAAMyO,MAAMC,OAAO1D,iBAEvB,IAAMiI,EAAW,WACfF,EAAS,MACTlH,EAAIC,WAAW9L,EAAMyO,MAAMC,OAAO1D,gBAAgB,SAACuB,GACjDkG,EAAclG,GACdoG,EAAwBpG,MACvB,SAACE,GAAD,OAAWsG,EAAStG,OAGnByG,EAAmB,WACvBrH,EAAIC,WAAW9L,EAAMyO,MAAMC,OAAO1D,gBAAgB,SAACuB,GAAD,OAAUoG,EAAwBpG,OA4BtF,OAAIuG,EACK,cAAC,GAAD,CAAOV,QAASa,IACO,oBAAdnE,EAzBd,sBAAKxN,UAAWpB,EAAQ8D,KAAxB,UACE,cAACmP,GAAA,EAAD,UACE,kCAAQrE,EAAWZ,SAAnB,mBAEF,cAAC,GAAD,CAAeY,WAAY4D,EAAsBhB,eAAgBsB,IACjE,sBAAK1R,UAAWpB,EAAQoS,cAAxB,UACE,cAAC,GAAD,CAAmB5Q,KAAMkR,EAAS9D,WAAY4D,IAC9C,uBAAMpR,UAAWpB,EAAQqS,KAAzB,UACE,cAAC,IAAD,CAAOa,KAAK,sCAAsC1C,UAAW,SAAC1Q,GAAD,OAAW,cAAC,EAAD,2BAAUA,GAAV,IAAiB8O,WAAYA,EAAY9L,SAAU,WAAOkQ,WAClI,cAAC,IAAD,CAAOE,KAAK,sCAAsC1C,UAAW,SAAC1Q,GAAD,OAAW,cAAC,EAAD,2BAAeA,GAAf,IAAsBgD,SAAU,WAAOkQ,WAC/G,cAAC,IAAD,CAAOE,KAAK,8BAA8B1C,UAAW2C,cAS3D,cAAC9R,EAAA,EAAD,K,oBC5ES+R,gBAAe,CAC5B3D,QAAS,CACPjM,KAAM,OACNkM,QAAS,CACP2C,KAAM,WAER1B,UAAW,CACT0B,KAAM,c,UCKGgB,GATF,SAACvT,GACZ,OACE,eAACwT,GAAA,EAAD,CAAe9T,MAAO+T,GAAtB,UACE,cAACC,GAAA,EAAD,IACA,8CCmBSC,GAxBD,SAAC3T,GAEb,MAA0BG,mBAAS,IAAnC,mBAAOyT,EAAP,KAAcC,EAAd,KAQA,OANArF,qBAAU,WACR3C,EAAI8B,UAAS,SAACpB,GACZsH,EAAStH,SAKX,gCACE,uCACCqH,EAAM3R,KAAI,SAACC,GAAD,OACT,4BACE,eAAC,IAAD,CAAMsO,GAAI,MAAQtO,EAAKmO,KAAvB,UACGnO,EAAKgM,SADR,KACoBhM,EAAK4R,OADzB,aAAkC5R,EAAKmO,eCPjD0D,EAAQ,KAAUC,SAElB,IAeeC,GAfH,SAACjU,GACX,OACE,cAAC,mBAAD,CAAkBkU,cAAe,CAAEC,iBAAkB,KAArD,SACE,eAACX,GAAA,EAAD,CAAe9T,MAAO+T,GAAtB,UACE,cAACC,GAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAON,KAAK,SAASgB,OAAK,EAAC1D,UAAWiD,KACtC,cAAC,IAAD,CAAOP,KAAK,IAAIgB,OAAK,EAAC1D,UAAW6C,KACjC,cAAC,IAAD,CAAOH,KAAK,qBAAqB1C,UAAW8B,cCVlC6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/F,MACvB,2DCZNgG,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3I,MAAK,SAAA4I,GACjCA,EAAaC,kB","file":"static/js/main.20562d28.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport SortIcon from '@material-ui/icons/Sort';\nimport Popper from \"@material-ui/core/Popper\";\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ExportIcon from '@material-ui/icons/InsertDriveFile';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    marginRight: \"1rem\",\n  }\n}));\n\nconst ChannelListSettings = (props) => {\n\n  const classes = useStyles();\n\n  const [sortPopperIsVisible, setSortPopperIsVisible] = useState(false)\n  const [selectionPopperIsVisible, setSelectionPopperIsVisible] = useState(false)\n  const [channelActionIsInProgress, setChannelActionIsInProgress] = useState(false)\n\n  const sortAnchorRef = React.useRef(null);\n  const selectionAnchorRef = React.useRef(null);\n\n  const sortOptions = [\n    {label: \"channel no asc\", field: \"channel_no\", dir: \"asc\", type: \"number\"},\n    {label: \"channel no desc\", field: \"channel_no\", dir: \"desc\", type: \"number\"},\n    {label: \"name asc\", field: \"name\", dir: \"asc\", type: \"text\"},\n    {label: \"name desc\", field: \"name\", dir: \"desc\", type: \"text\"}\n  ]\n\n  const handleFilterTextChange = (e) => {\n    props.onFilterTextChange(e.target.value);\n  }\n\n  const handleSortChange = (sortOption) => {\n    props.onSortChange(sortOption.field, sortOption.dir, sortOption.type)\n    setSortPopperIsVisible(false);\n  }\n\n  let optionsButton\n  if (props.selectedChannels.length > 0 && props.channelActions.length > 0) {\n    optionsButton =\n      <span>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => setSelectionPopperIsVisible(true)}\n          ref={selectionAnchorRef}\n          className={classes.button}\n        >\n          {props.selectedChannels.length} items selected\n          {channelActionIsInProgress && <CircularProgress size={24} />}\n          <ExpandMoreIcon />\n        </Button>\n        <Popper open={selectionPopperIsVisible} anchorEl={selectionAnchorRef.current}>\n          <Paper>\n            <ClickAwayListener onClickAway={() => setSelectionPopperIsVisible(false)}>\n              <MenuList>\n                {props.channelActions.map((item, key) =>\n                  <MenuItem key={key} onClick={(event) => {\n                    item.onClick(props.selectedChannels, () => {\n                      setChannelActionIsInProgress(false)\n                      props.onOptionButtonSuccess()\n                    })\n                    setChannelActionIsInProgress(true)\n                    setSelectionPopperIsVisible(false)\n                  }}>\n                    {item.label}\n                  </MenuItem>\n                )}\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </span>\n  }\n\n  return (\n    <Toolbar className=\"channel-list-settings\">\n      <div>\n        {optionsButton}\n        {props.optionButtons}\n      </div>\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          {props.headline}\n        </Typography>\n      <div>\n        <TextField\n          label=\"Search...\"\n          value={props.filterText}\n          onChange={handleFilterTextChange}\n        />\n        <Tooltip title=\"Export as CSV\">\n          <IconButton aria-label=\"delete\">\n            <ExportIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Change sort\" open={sortPopperIsVisible ? false : undefined}>\n          <IconButton ref={sortAnchorRef} aria-label=\"change sort\" onClick={() => setSortPopperIsVisible(true)}>\n            <SortIcon />\n          </IconButton>\n        </Tooltip>\n        <Popper open={sortPopperIsVisible} anchorEl={sortAnchorRef.current}>\n          <Paper>\n            <ClickAwayListener onClickAway={() => setSortPopperIsVisible(false)}>\n              <MenuList>\n                {sortOptions.map((sortOption, index) => (\n                  <MenuItem key={sortOption.label} onClick={(event) => handleSortChange(sortOption)}>\n                    {sortOption.label}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n        {props.options}\n      </div>\n    </Toolbar>\n  );\n}\n\nexport default ChannelListSettings","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useState} from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n  root: (props) => ({\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    marginRight: \"5px\",\n    width: \"100%\",\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    background: props.selected ? \"#6b5f73\" : \"#48434b\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"5px\",\n    \"& input:not([type='checkbox'])\": {\n      border: \"0\",\n      backgroundColor: \"transparent\",\n      width: \"50px\"\n    },\n    \"&:hover input:not([type='checkbox']), & input:focus\": {\n      outline: \"none\",\n      background: \"#ffffff21\"\n    },\n    \"& input.name, & input.channel-no\": {\n      display: \"inline-block\",\n      padding: \"5px\",\n      marginRight: \"1rem\",\n      color: \"#fff\"\n    },\n    \"& input.channel-no\": {\n      width: \"60px\",\n      fontSize: \"15px\",\n      textAlign: \"right\",\n      marginRight: \"5px\"\n    },\n    \"& input.name\": {\n      flexGrow: 1,\n      fontWeight: \"bolder\",\n      textOverflow: \"ellipsis\",\n      width: \"10rem\",\n      overflow: \"hidden\",\n      fontSize: \"15px\",\n      padding: \"5px\"\n    },\n    \"&:focus, &:focus-within\": {\n      background: \"#6b5f73\"\n    }\n  })\n}));\n\nconst Channel = React.memo((props) => {\n\n  /**\n   * Testplan\n   * Creatign a good user expierience is very important for editing a whole bunch of channels.\n   * Users are very different, some users will use mouse navigation others will use key-board navigation very heavily\n   * We have many different points to check, so there is a manual test plan to check:\n   *\n   * - Keyboard-Navigation without changes works properly (navigating by tab, enter, key-down/up)\n   * - By clicking on a INPUT starts the edit mode and the input gets focused\n   * - By entering the edit-mode the text / number gets selected\n   * - If we click again we can set the cursor to a specific char\n   * - writing inside the input works\n   * - After editing a value and bluring the input it gets saved\n   * - After ediiting a value and doing keyboard-navigation (enter / key down) we get to the expected row\n   * - Saving by tabs works properly\n   */\n\n  /**\n   * We have a local state for editing the channel. By entering the edit-mode we copy\n   * the parent-state into the local state. After leaving the edit-mode we trigger a\n   * event so the parent component can handle the change\n   */\n  const [isEditMode, setIsEditMode] = useState(false)\n  const [channelNo, setChannelNo] = useState(\"\")\n  const [channelName, setChannelName] = useState(\"\")\n  const classes = useStyles(props)\n\n  /**\n   * Focus name / number-field\n   * 1) We select all the text (it should by more user friendly)\n   * 2) By focusing the input, we notify the parent about the new cursor position\n   * 3) We enter the edit mode\n   * @param event\n   */\n  const focusInput = (event) => {\n    event.target.select()\n    notifyCursorPos(event.target.dataset.field)\n    enterEditMode(event)\n  }\n\n  /**\n   * Blur Event\n   * We just land here if we blur the input by mouse. Navigating by keyboard will not result in bluring input\n   * @param event\n   */\n  const blurInput = (event) => {\n    disableEditMode(0, null)\n  }\n\n  /**\n   * Activate the Edit-Mode and set the the current name/channel-no for modification\n   * @param event\n   */\n  const enterEditMode = (event) => {\n    if (isEditMode) {\n      return\n    }\n\n    setIsEditMode(true)\n    setChannelName(props.channelData.name)\n    setChannelNo(props.channelData.channelNo)\n  }\n\n  /**\n   * Notify parent about cursor position (active field)\n   * @param field\n   */\n  const notifyCursorPos = (field) => {\n\n    // if cursor-position is update, we nothing to do\n    if (props.cursorPos.channelId === props.channelData.channelId && props.cursorPos.field === field) {\n      return\n    }\n\n    // call parent event handler\n    props.onCursorChange(props.channelData.channelId, field)\n  }\n\n  /**\n   * Keboard-Navigation\n   * @param event\n   */\n  const handleKeyNav = (event) => {\n    let keys = {\n      38: \"up\", // KEY_UP\n      40: \"down\", // KEY_DOWN\n      13: \"down\" // ENTER\n    }\n\n    // tab and current field is \"name\" then switch to next channel\n    if (event.shiftKey && event.keyCode === 9 && event.target.dataset.field === 'no') {\n      disableEditMode(\"up\", \"name\")\n      event.preventDefault()\n    } else if (event.shiftKey && event.keyCode === 9 && event.target.dataset.field === 'name') {\n      disableEditMode(\"current\", \"no\")\n      event.preventDefault()\n    } else if (event.keyCode === 9 && event.target.dataset.field === 'name') {\n      disableEditMode(\"down\", \"no\")\n      event.preventDefault()\n    } else if (event.keyCode === 9 && event.target.dataset.field === 'no') {\n      disableEditMode(\"current\", \"name\")\n      event.preventDefault()\n    }\n\n    if (event.keyCode in keys) {\n      disableEditMode(keys[event.keyCode], event.target.dataset.field)\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Disable Edit Mode\n   * By disabling edit mode we trigger the onChannelChange event (if any data has changed),\n   * so the parent component can handle the change\n   */\n  const disableEditMode = (nextChannelToEnter, nextFieldToEnter) => {\n    setIsEditMode(false)\n\n    // check if anything has changed, in case if not, do nothing anymore\n    if (props.channelData.name !== channelName || props.channelData.channelNo !== channelNo) {\n      let newData = {}\n      newData['name'] = channelName\n      newData['channelNo'] = channelNo\n      props.onChannelChange({...props.channelData, ...newData})\n    }\n\n    // navigate to next channel if requested\n    if ([\"up\", \"down\", \"current\"].includes(nextChannelToEnter)) {\n      props.onKeyNavigation(nextChannelToEnter, nextFieldToEnter)\n    } else {\n      props.onCursorChange(0, null)\n    }\n  }\n\n  const toggleChannelSelection = (event) => {\n    if (typeof props.onSelectionChange === \"function\") {\n      props.onSelectionChange(props.channelData.channelId)\n    }\n  }\n\n  return (\n    <div style={props.style}>\n      <div\n        className={classes.root}\n        onKeyDown={handleKeyNav}\n        id={\"channel-\" + props.channelData.channelId}\n      >\n        <Checkbox\n          onChange={toggleChannelSelection}\n          checked={props.selected}\n          color=\"secondary\"\n        />\n        <input\n          type=\"text\"\n          className=\"channel-no\"\n          data-field=\"no\" // field-type for cursorPos\n          tabIndex={props.channelTabIndex * 10000 + 1} // tabIndex for looping through inputs by tab\n          value={isEditMode ? channelNo : props.channelData.channelNo}\n          readOnly={isEditMode ? false : true}\n          onChange={(e) => {setChannelNo(e.target.value)}}\n          onFocus={focusInput} // if we get the focus we automatically enter the editmodus\n          autoFocus={props.cursorPos.channelId === props.channelData.channelId && props.cursorPos.field === 'no'}\n          onBlur={blurInput}\n        />\n        <input\n          type=\"text\"\n          className=\"name\"\n          data-field=\"name\"\n          tabIndex={props.channelTabIndex * 10000 + 2}\n          value={isEditMode ? channelName : props.channelData.name}\n          onChange={(e) => {setChannelName(e.target.value)}}\n          onFocus={focusInput}\n          autoFocus={props.cursorPos.channelId === props.channelData.channelId && props.cursorPos.field === 'name'}\n          onBlur={blurInput}\n          readOnly={props.channelNameReadOnly}\n        />\n      </div>\n    </div>\n  )\n})\n\nexport default Channel","import AutoSizer from \"react-virtualized-auto-sizer\";\nimport {FixedSizeList as List} from \"react-window\";\nimport React, {useState} from \"react\";\nimport Channel from \"./Channel\";\n\nconst ChannelListChannels = (props) => {\n\n  const [cursorPos, setCursorPos] = useState({channelId: 0, field: \"no\"})\n\n  const handleKeyNavigation = (dir, field) => {\n    console.log(\"handleKeyNavigation\")\n    var currentIndex, newIndex\n    for (let i in props.channels) {\n      if (cursorPos.channelId !== props.channels[i].channelId) {\n        continue\n      }\n      currentIndex = parseInt(i)\n      switch (dir) {\n        case \"left\":\n          newIndex = currentIndex - 1\n          break\n        case \"right\":\n          newIndex = currentIndex + 1\n          break\n        case \"down\":\n          newIndex = currentIndex + 1\n          break\n        case \"up\":\n          newIndex = currentIndex - 1\n          break\n        case \"current\":\n          newIndex = currentIndex\n          break\n        default:\n      }\n\n      if (typeof props.channels[newIndex] !== \"undefined\") {\n        setCursorPos({channelId: props.channels[newIndex].channelId, field: field})\n      }\n    }\n  }\n\n  const handleChannelChange = (channel) => {\n    if (typeof props.onChannelChange === \"function\") {\n      props.onChannelChange(channel)\n    }\n  }\n\n  const handleCursorChange = (channelId, field) => {\n    setCursorPos({channelId: channelId, field: field})\n  }\n\n  const handleSelectionChange = (channelId) => {\n    props.onSelectionChange(channelId)\n  }\n\n  let channelTabIndex = 0;\n\n  const Row = ({ index, style }) => {\n    let channel = props.channels[index]\n    let selected = props.selectedChannels.indexOf(channel.channelId) !== -1\n    channelTabIndex = channelTabIndex + 1\n\n    return (\n      <Channel\n        channelData={channel}\n        key={channel.channelId}\n        channelTabIndex={channelTabIndex}\n        onChannelChange={handleChannelChange}\n        onKeyNavigation={handleKeyNavigation}\n        onCursorChange={handleCursorChange}\n        cursorPos={cursorPos}\n        style={style}\n        onSelectionChange={handleSelectionChange}\n        selected={selected}\n        channelNameReadOnly={props.channelNameReadOnly}\n      ></Channel>\n    )\n  }\n\n  return (\n    <div id=\"channel-list-container\">\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            height={height}\n            itemCount={props.channels.length}\n            itemSize={55}\n            width={width}\n            className=\"channels\"\n            overscanCount={5}\n            itemData={props.channels}\n          >\n            {Row}\n          </List>\n        )}\n      </AutoSizer>\n    </div>\n  )\n}\n\nexport default ChannelListChannels","import React, {useState} from \"react\"\nimport ChannelListSettings from \"./ChannelListSettings\";\nimport ChannelListChannels from \"./ChannelListChannels\";\n\nconst Channel = (props) => {\n\n  const defaultSort = {field: \"channel_no\", dir: \"asc\", type: \"number\"}\n\n  const [filter, setFilter] = useState({text: \"\"})\n  const [sort, setSort] = useState(defaultSort)\n  const [selectedChannels, setSelectedChannels] = useState([])\n\n  const filterChannels = (channels) => {\n    let filteredChannels = []\n    for (let i in channels) {\n      if (channels[i].name.toLowerCase().indexOf(filter.text.toLowerCase()) !== -1) {\n        filteredChannels.push(channels[i])\n      }\n    }\n    return filteredChannels\n  }\n\n  const sortChannels = (channels) => {\n    let retA = sort.dir === \"desc\" ? 1 : -1\n    let retB = sort.dir === \"desc\" ? -1 : 1\n\n    switch (sort.type) {\n      case \"number\":\n        channels.sort((a,b) => parseInt(a[sort.field]) > parseInt(b[sort.field]) ? retA : retB)\n        break;\n      default:\n      case \"text\":\n        channels.sort((a,b) => a[sort.field] > b[sort.field] ? retB : retA)\n    }\n\n    return channels\n  }\n\n  const handleSortChange = (field, dir, type) => {\n    setSort({field: field, dir: dir, type: type})\n  }\n\n  const getChannelsToDisplay = (channels) => {\n    let channelsToDisplay = filterChannels(props.channels)\n    channelsToDisplay = sortChannels(channelsToDisplay)\n\n    return channelsToDisplay\n  }\n\n  const handleChannelChange = (channel) => {\n    if (typeof props.onChannelChange === \"function\") {\n      props.onChannelChange(channel)\n    }\n  }\n\n  const handleSelectionChange = (channelId) => {\n    let newSelectedChannels = [...selectedChannels]\n    let index = newSelectedChannels.indexOf(channelId)\n    if (index === -1) {\n      newSelectedChannels.push(channelId)\n    } else {\n      newSelectedChannels.splice(index, 1)\n    }\n    setSelectedChannels(newSelectedChannels)\n  }\n\n  const handleOptionButtonSuccess = () => {\n    setSelectedChannels([])\n  }\n\n  let channelsToDisplay = getChannelsToDisplay(props.channels)\n\n  return (\n    <div className=\"channel-list\">\n      <ChannelListSettings\n        filterText={filter.text}\n        sort={{sortField: \"name\", sortDir: \"desc\", sortType: \"text\"}}\n        sortField={sort.field}\n        sortDir={sort.dir}\n        sortType={sort.type}\n        onFilterTextChange={(text) => setFilter({text: text})}\n        onSortChange={handleSortChange}\n        onSelectionChange={handleSelectionChange}\n        selectedChannels={selectedChannels}\n        channelActions={props.channelActions}\n        optionButtons={props.optionButtons}\n        onOptionButtonSuccess={handleOptionButtonSuccess}\n        headline={props.headline}\n      />\n      <ChannelListChannels\n        channels={channelsToDisplay}\n        onChannelChange={handleChannelChange}\n        onSelectionChange={handleSelectionChange}\n        selectedChannels={selectedChannels}\n        channelNameReadOnly={props.channelNameReadOnly}\n      />\n    </div>\n  )\n}\n\nexport default Channel","var baseUrl = process.env.REACT_APP_API_URL\nconst ApiUrlGenerator = {\n    buildFileUrl: function(scmPackageHash, scmFileId) {\n        return baseUrl + scmPackageHash + \"/file/\" + scmFileId + \"/json/\"\n    },\n\n    buildFileExportUrl: function(scmPackageHash, scmFileId) {\n        return baseUrl + scmPackageHash + \"/file/\" + scmFileId + \"/csv/\"\n    },\n\n    buildPackageUrl: function(scmPackageHash) {\n        return baseUrl + scmPackageHash + \".json\"\n    },\n\n    buildReorderUrl: function(scmPackageHash, scmFileId) {\n        return baseUrl + scmPackageHash + \"/file/\" + scmFileId + \"/reorder/\"\n    },\n\n    buildFavoriteUrl: function(scmPackageHash, favNo) {\n        return baseUrl + scmPackageHash + \"/favorites/\" + favNo + \".json\"\n    },\n\n    buildChannelsUrl: function(scmPackageHash) {\n        return baseUrl + scmPackageHash + \"/channels.json\"\n    },\n\n    buildDownloadUrl: function(scmPackageHash) {\n        return baseUrl + scmPackageHash + \"/download/\"\n    },\n\n    buildUploadUrl: function() {\n        return baseUrl + \"upload/\"\n    },\n\n    buildUploadJsonUrl: function() {\n        return baseUrl + \"upload.json\"\n    },\n\n    buildImportSettingsUrl: function(scmPackageHash) {\n        return baseUrl + scmPackageHash + \"/import-settings.json\"\n    },\n\n    buildStatsUrl: function() {\n        return baseUrl + \"stats.json\"\n    }\n}\n\nexport default ApiUrlGenerator\n","import apiUrlGenerator from \"./apiUrlGenerator\";\n/*@todo: error-handling implementieren, z.B. ob der result auch json ist usw....*/\nvar Api = {\n  getPackage(scmPackageId, cbSuccess, cbError) {\n    fetch(apiUrlGenerator.buildPackageUrl(scmPackageId))\n      .then(results => {\n        return results.json()\n      })\n      .then(data => {\n        cbSuccess(data)\n      }).catch(error => {\n        cbError(error)\n      })\n  },\n\n  getFavorites(scmPackageId, favNo, callback) {\n    fetch(apiUrlGenerator.buildFavoriteUrl(scmPackageId, favNo))\n      .then(results => {\n        return results.json()\n      })\n      .then(data => {\n        callback(data)\n      })\n  },\n\n  getFile(scmPackageHash, scmFileId, callback) {\n    fetch(apiUrlGenerator.buildFileUrl(scmPackageHash, scmFileId))\n      .then(results => {\n        if (!results.ok) {\n          throw Error(results.statusText);\n        }\n        return results;\n      })\n      .then(results => {\n        return results.json()\n      })\n      .then(data => {\n        callback(data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  },\n\n  saveFile(scmPackageHash, scmFileId, channels, callback) {\n\n    fetch(apiUrlGenerator.buildFileUrl(scmPackageHash, scmFileId), {\n      method: \"POST\",\n      body: JSON.stringify(channels)\n    })\n      .then(response => response.json())\n      .then(() => {callback()});\n  },\n\n  saveFavorites(scmPackageHash, favNo, channels, callback) {\n    fetch(apiUrlGenerator.buildFavoriteUrl(scmPackageHash, favNo), {\n      method: \"POST\",\n      body: JSON.stringify(channels)\n    })\n      .then(response => response.json())\n      .then(() => {callback()});\n  },\n\n  addChannelsToFav(scmPackageHash, favNo, channelIds, callback) {\n    let channelData = {}\n    for (let i in channelIds) {\n      channelData[channelIds[i]] = {\n        channelId: channelIds[i],\n        action: \"add\"\n      }\n    }\n    fetch(apiUrlGenerator.buildFavoriteUrl(scmPackageHash, favNo), {\n      method: \"POST\",\n      body: JSON.stringify(channelData)\n    })\n      .then(response => response.json())\n      .then(() => {callback()})\n  },\n\n  removeChannelsFromFav(scmPackageHash, favNo, channelIds, callback) {\n    let channelData = {}\n    for (let i in channelIds) {\n      channelData[channelIds[i]] = {\n        channelId: channelIds[i],\n        action: \"remove\"\n      }\n    }\n    fetch(apiUrlGenerator.buildFavoriteUrl(scmPackageHash, favNo), {\n      method: \"POST\",\n      body: JSON.stringify(channelData)\n    })\n      .then(response => response.json())\n      .then(() => {callback()})\n  },\n\n  getStats(callback) {\n    fetch(apiUrlGenerator.buildStatsUrl(), {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(data => {callback(data)})\n  }\n}\n\nexport default Api","import React, {useEffect, useState} from \"react\"\nimport ChannelList from \"./../ChannelList\"\nimport Api from \"../../utils/Api\"\nimport Button from \"@material-ui/core/Button\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport Alert from '@material-ui/lab/Alert';\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSnackbar} from 'material-ui-snackbar-provider'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    marginRight: \"1rem\",\n  }\n}));\n\n\nconst File = (props) => {\n\n  const classes = useStyles()\n  const snackbar = useSnackbar()\n\n  const [isInitialized, setIsInitialized] = useState(false)\n  const [channels, setChannels] = useState([])\n  const [filename, setFilename] = useState(undefined)\n  const [modifiedChannels, setModifiedChannels] = useState({})\n  const [isSaving, setIsSaving] = useState(false)\n\n  useEffect(() => {\n    Api.getFile(props.match.params.scmPackageHash, props.match.params.scmFileId, (data) => {\n      setChannels(data.channels)\n      setFilename(data.label)\n      setIsInitialized(true)\n    })\n  }, [props.match.params.scmPackageHash, props.match.params.scmFileId])\n\n  const handleChannelChange = (channel) => {\n    let newChannels = [...channels]\n    for (let i in newChannels) {\n      if (newChannels[i].channelId === channel.channelId) {\n        newChannels[i] = channel\n      }\n    }\n    setChannels(newChannels)\n    setModifiedChannels({...modifiedChannels, [channel.channelId]: channel})\n  }\n\n  const addChannelsToFav = (channelIds, favNo, clearAfterSaving) => {\n    Api.addChannelsToFav(props.match.params.scmPackageHash, favNo, channelIds, () => {\n      setModifiedChannels({})\n      clearAfterSaving()\n      snackbar.showMessage(\n        `${channelIds.length} channel(s) successfully added to Fav #${favNo}`\n      )\n      props.onChange()\n    })\n  }\n\n  const save = () => {\n    setIsSaving(true)\n    Api.saveFile(props.match.params.scmPackageHash, props.match.params.scmFileId, modifiedChannels, () => {\n      setModifiedChannels({})\n      setIsSaving(false)\n      props.onChange()\n      snackbar.showMessage(\n        `File successfully saved`\n      )\n    })\n  }\n\n  let modifiedChannelsAction;\n\n  if (Object.keys(modifiedChannels).length > 0) {\n    modifiedChannelsAction = <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={save}\n      className={classes.button}\n    >\n      <SaveIcon />\n      Save {Object.keys(modifiedChannels).length} item(s)\n      {isSaving && <CircularProgress size={24} />}\n    </Button>\n  }\n\n  let channelActions = []\n  props.scmPackage.favorites.forEach(element => {\n    channelActions.push({label: \"Add to Fav #\" + element.favNo, onClick: (channels, clearAfterSaving) => {addChannelsToFav(channels, element.favNo, clearAfterSaving)}})\n  })\n\n  return (\n    isInitialized\n      ? <ChannelList\n          channels={channels}\n          onChannelChange={handleChannelChange}\n          channelActions={channelActions}\n          optionButtons={modifiedChannelsAction}\n          headline={filename}\n        />\n      : <Snackbar open={true}>\n        <Alert elevation={6} variant=\"filled\" severity=\"info\">\n          Loading ...\n        </Alert>\n      </Snackbar>\n  )\n}\n\nexport default File","import React, {useEffect, useState} from \"react\"\nimport ChannelList from \"./../ChannelList\";\nimport Api from \"../../utils/Api\";\nimport {useSnackbar} from 'material-ui-snackbar-provider'\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    marginRight: \"1rem\",\n  }\n}));\n\nconst Favorites = (props) => {\n\n  const snackbar = useSnackbar()\n  const [isInitialized, setIsInitialized] = useState(false)\n  const [channels, setChannels] = useState([])\n  const [modifiedChannels, setModifiedChannels] = useState({})\n  const [isSaving, setIsSaving] = useState(false)\n  const classes = useStyles()\n\n  const initData = () => {\n    Api.getFavorites(props.match.params.scmPackageHash, props.match.params.favNo, (data) => {\n      setChannels(data.selectedChannels)\n      setIsInitialized(true)\n    })\n  }\n\n  useEffect(() => {\n    initData()\n    //eslint-disable-next-line\n  }, [props.match.params.scmPackageHash, props.match.params.favNo])\n\n\n  const save = () => {\n    let newChannels = [...channels]\n    newChannels.sort((a,b) => parseInt(a.channelNo) > parseInt(b.channelNo) ? 1 : -1)\n    let data = []\n    newChannels.forEach(item => data.push({\"channelId\": item.channelId, \"sort\": item.channelNo}))\n    console.log(data)\n    setIsSaving(true)\n    Api.saveFavorites(props.match.params.scmPackageHash, props.match.params.favNo, data, () => {\n      setModifiedChannels({})\n      setIsSaving(false)\n      props.onChange()\n    })\n  }\n\n  const removeChannelsFromFav = (channelIds, favNo, clearAfterSaving) => {\n    Api.removeChannelsFromFav(props.match.params.scmPackageHash, favNo, channelIds, () => {\n      clearAfterSaving()\n      snackbar.showMessage(\n        `${channelIds.length} channel(s) successfully removed from Fav #${favNo}`\n      )\n      props.onChange()\n      initData()\n    })\n  }\n\n  const handleChannelChange = (channel) => {\n    let newChannels = [...channels]\n    for (let i in newChannels) {\n      if (newChannels[i].channelId === channel.channelId) {\n        newChannels[i] = channel\n      }\n    }\n    setChannels(newChannels)\n    setModifiedChannels({...modifiedChannels, [channel.channelId]: channel})\n  }\n\n  let modifiedChannelsAction;\n\n  if (Object.keys(modifiedChannels).length > 0) {\n    modifiedChannelsAction = <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={save}\n      className={classes.button}\n    >\n      <SaveIcon />\n      Save {Object.keys(modifiedChannels).length} item\n      {isSaving && <CircularProgress size={24} />}\n    </Button>\n  }\n\n  let channelActions = [\n    {label: \"Remove from Fav\", onClick: (channels, clearAfterSaving) => {removeChannelsFromFav(channels, props.match.params.favNo, clearAfterSaving)}},\n  ]\n\n  return (\n    isInitialized ?\n    <ChannelList\n      channels={channels}\n      channelActions={channelActions}\n      channelNameReadOnly={true}\n      onChannelChange={handleChannelChange}\n      optionButtons={modifiedChannelsAction}\n      headline={\"Favorites #\" + props.match.params.favNo}\n    /> : <Snackbar open={true}>\n        <Alert elevation={6} variant=\"filled\" severity=\"info\">\n          Loading ...\n        </Alert>\n      </Snackbar>\n  );\n}\n\nexport default Favorites","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TvIcon from '@material-ui/icons/Tv';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    background: theme.palette.primary.light,\n    width: props.open ? \"auto\" : \"60px\",\n  }),\n  container: {\n    overflow: \"hidden\"\n  },\n  list: {\n    minWidth: \"240px\"\n  }\n}));\n\nconst PackageNavigation = (props) => {\n  const classes = useStyles(props);\n\n  if (!props.scmPackage) {\n    return <div></div>\n  }\n\n  const getNavFiles = () => {\n    if (typeof props.scmPackage.files === \"undefined\") return []\n    return props.scmPackage.files.map((file) => {\n      let hash = props.scmPackage.hash\n      let link = React.forwardRef((props, ref) => <Link {...props} to={\"/p/\" + hash + \"/files/\" + file.scmFileId} ref={ref} />);\n      return (\n        <ListItem key={\"list-item-file-\" + file.scmFileId} button component={link}>\n          <ListItemIcon><TvIcon /></ListItemIcon>\n          <ListItemText primary={file.label} secondary={file.channelCount + \" channels\"} />\n        </ListItem>\n      )\n    })\n  }\n\n  const getNavFavorites = () => {\n    if (typeof props.scmPackage.favorites === \"undefined\") return []\n\n    return props.scmPackage.favorites.map((favorite) => {\n      let hash = props.scmPackage.hash\n      let link = React.forwardRef((props, ref) => <Link {...props} to={\"/p/\" + hash + \"/favorites/\" + favorite.favNo} ref={ref} />);\n      return (\n        <ListItem key={\"list-item-fav-\" + favorite.favNo} button component={link}>\n          <ListItemIcon><StarIcon /></ListItemIcon>\n          <ListItemText primary={\"Fav #\" + favorite.favNo} secondary={favorite.channelCount + \" channels\"} />\n        </ListItem>\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <List className={classes.list}>\n          {getNavFiles()}\n        </List>\n        <Divider />\n        <List className={classes.list}>\n          {getNavFavorites()}\n        </List>\n      </div>\n    </div>\n  );\n}\n\nexport default PackageNavigation","import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport Button from \"@material-ui/core/Button\";\nimport apiUrlGenerator from \"../../utils/apiUrlGenerator\";\n\nconst Download = (props) => {\n  console.log(props)\n  return (\n    <Container>\n      <h1>Download</h1>\n      <p>Thank you for using SamyCHAN. Click the download button and save the file to your usb-stick. Afterwards you can import the file into your SAMSUNG television.</p>\n      <Button variant=\"contained\" color=\"secondary\" href={apiUrlGenerator.buildDownloadUrl(props.match.params.scmPackageHash)} startIcon={<CloudDownloadIcon />}>Download channel list</Button>\n    </Container>\n  )\n}\n\nexport default Download","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  filenameHeadline: {\n    flexGrow: 1,\n  }\n}));\n\nconst PackageHeader = (props) => {\n  const classes = useStyles();\n  const handleDrawerToggle = () => {\n    props.onToggleDrawer()\n  }\n\n  if (!props.scmPackage) {\n    return <AppBar></AppBar>\n  }\n\n  let hash = props.scmPackage.hash\n  let link = React.forwardRef((props, ref) => <Link {...props} to={\"/p/\" + hash + \"/download\"} ref={ref} />);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerToggle}>\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.filenameHeadline}>\n          {props.scmPackage.filename}\n        </Typography>\n        <Button variant=\"contained\" color=\"secondary\" component={link} startIcon={<CloudDownloadIcon />}>Download</Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default PackageHeader","import React from \"react\"\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fontSize: \"50px\"\n  }\n}));\n\nconst Error = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '100vh' }}\n    >\n\n      <Grid item xs={3}>\n        <div style={{textAlign: \"center\"}}>\n          <ErrorOutlineIcon className={classes.icon} />\n          <h1>Error</h1>\n          <p>Something went wrong</p>\n          <Link onClick={props.onReset} href=\"#\">Retry</Link>\n        </div>\n      </Grid>   \n\n    </Grid> \n        \n  )\n}\n\nexport default Error","import React, {useEffect, useState} from \"react\";\nimport {Route} from \"react-router-dom\";\nimport File from '../File';\nimport Favorites from '../Favorites';\nimport PackageNavigation from \"./PackageNavigation\";\nimport Downloader from \"../Downloader\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Api from \"../../utils/Api\"\nimport PackageHeader from \"./PackageHeader\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet'\nimport Error from \"../Error\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n  },\n  mainContainer: {\n    display: \"flex\",\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  main: {\n    flexGrow: 1\n  }\n}));\n\nconst Package = (props) => {\n  const classes = useStyles(props);\n  const [scmPackage, setScmPackage] = useState(undefined)\n  const [scmPackageNavigation, setScmPackageNavigation] = useState(undefined)\n  const [navOpen, setNavOpen] = useState(true)\n  const [isError, setError] = useState(null)\n\n  const handleDrawerToggle = () => {\n    setNavOpen(!navOpen)\n  }\n\n  useEffect(() => {\n    loadData()\n    //eslint-disable-next-line\n  }, [props.match.params.scmPackageHash])\n\n  const loadData = () => {\n    setError(null)\n    Api.getPackage(props.match.params.scmPackageHash, (data) => {\n      setScmPackage(data)\n      setScmPackageNavigation(data)\n    }, (error) => setError(error))\n  }\n\n  const updateNavigation = () => {\n    Api.getPackage(props.match.params.scmPackageHash, (data) => setScmPackageNavigation(data))\n  }\n\n  var render = () => {\n    return (\n      <div className={classes.root}>\n        <Helmet>\n          <title>{scmPackage.filename} | SamyCHAN</title>\n        </Helmet>\n        <PackageHeader scmPackage={scmPackageNavigation} onToggleDrawer={handleDrawerToggle}/>\n        <div className={classes.mainContainer}>\n          <PackageNavigation open={navOpen} scmPackage={scmPackageNavigation}/>\n          <main className={classes.main}>\n            <Route path=\"/p/:scmPackageHash/files/:scmFileId\" component={(props) => <File {...props} scmPackage={scmPackage} onChange={() => {updateNavigation()}} />} />\n            <Route path=\"/p/:scmPackageHash/favorites/:favNo\" component={(props) => <Favorites {...props} onChange={() => {updateNavigation()}} />} />\n            <Route path=\"/p/:scmPackageHash/download\" component={Downloader} />\n          </main>\n        </div>\n      </div>\n    )\n  }\n\n  var showLoadingScreen = () => {\n    return (\n      <CircularProgress />\n    )\n  }\n\n  if (isError) {\n    return <Error onReset={loadData} />\n  } else if (typeof scmPackage != \"undefined\") {\n    return render()\n  } else {\n    return showLoadingScreen()\n  }\n}\n\nexport default Package","import {createMuiTheme} from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#463750',\n    },\n    secondary: {\n      main: '#f44f1f'\n    }\n  }\n})\n\n","import React from \"react\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Theme from \"../../Theme\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\n\nconst Home = (props) => {\n  return (\n    <ThemeProvider theme={Theme}>\n      <CssBaseline />\n      <h1>Samychan</h1>\n    </ThemeProvider>\n  )\n}\n\nexport default Home","import React, {useEffect, useState} from \"react\";\nimport Api from \"../../utils/Api\"\nimport {Link} from \"react-router-dom\";\n\nconst Stats = (props) => {\n\n  const [stats, setStats] = useState([]);\n\n  useEffect(() => {\n    Api.getStats((data) => {\n      setStats(data)\n    })\n  })\n\n  return (\n    <div>\n      <h1>Stats</h1>\n      {stats.map((item) =>\n        <p>\n          <Link to={\"/p/\" + item.hash} key={item.hash}>\n            {item.filename} ({item.series}-Series)\n          </Link>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Stats","import React from 'react'\nimport './custom.scss'\nimport 'jquery/dist/jquery.min.js'\nimport Package from './components/Package'\nimport Home from './components/Home'\nimport Stats from './components/Stats'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport { SnackbarProvider } from 'material-ui-snackbar-provider'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Theme from \"./Theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nrequire('dotenv').config()\n\nconst App = (props) => {\n  return (\n    <SnackbarProvider SnackbarProps={{ autoHideDuration: 4000 }}>\n      <ThemeProvider theme={Theme}>\n        <CssBaseline />\n        <Router>\n          <Route path=\"/stats\" exact component={Stats} />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/p/:scmPackageHash\" component={Package} />\n        </Router>\n      </ThemeProvider>\n    </SnackbarProvider>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}